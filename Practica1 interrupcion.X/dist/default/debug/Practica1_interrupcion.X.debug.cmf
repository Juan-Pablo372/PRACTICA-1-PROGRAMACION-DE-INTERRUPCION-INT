%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/debug/newAsmTemplate.o
isr CODE 0 4 4 D 2
udata RAM 1 20 20 4 1
resetVec CODE 0 0 0 1 2
code CODE 0 51 51 9 2
main CODE 0 20 20 31 2
config CONFIG 4 2007 2007 2 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 24-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 24-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 1-3 2
CONST 11-1F 2
CONST 5A-1FFF 2
ENTRY 1-3 2
ENTRY 11-1F 2
ENTRY 5A-1FFF 2
IDLOC 2000-2003 2
CODE 1-3 2
CODE 11-1F 2
CODE 5A-1FFF 2
SFR0 2-7 1
SFR2 100-10F 1
SFR3 180-18F 1
COMMON 70-7F 1
EEDATA 2100-21FF 2
STRCODE 1-3 2
STRCODE 11-1F 2
STRCODE 5A-1FFF 2
STRING 1-3 2
STRING 11-1F 2
STRING 5A-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/debug/newAsmTemplate.o
20 main CODE >71:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
20 main CODE >72:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
22 main CODE >73:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
23 main CODE >74:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
24 main CODE >75:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
26 main CODE >76:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
27 main CODE >77:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
28 main CODE >78:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
29 main CODE >79:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
2A main CODE >80:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
2B main CODE >83:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
2D main CODE >84:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
2E main CODE >85:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
2F main CODE >87:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
31 main CODE >88:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
32 main CODE >89:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
33 main CODE >90:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
35 main CODE >91:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
36 main CODE >92:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
37 main CODE >94:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
39 main CODE >95:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
3A main CODE >96:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
3C main CODE >97:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
3D main CODE >98:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
3F main CODE >99:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
40 main CODE >101:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
42 main CODE >102:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
43 main CODE >103:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
44 main CODE >104:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
46 main CODE >105:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
47 main CODE >106:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
49 main CODE >107:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4A main CODE >110:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4A main CODE >111:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4C main CODE >112:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4D main CODE >113:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4E main CODE >114:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4F main CODE >115:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
50 main CODE >116:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4 isr CODE >49:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
4 isr CODE >50:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
5 isr CODE >51:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
6 isr CODE >53:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
7 isr CODE >54:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
8 isr CODE >55:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
9 isr CODE >57:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
9 isr CODE >58:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
A isr CODE >59:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
B isr CODE >60:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
C isr CODE >61:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
D isr CODE >63:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
D isr CODE >64:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
E isr CODE >65:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
F isr CODE >66:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
10 isr CODE >67:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
0 resetVec CODE >45:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
0 resetVec CODE >46:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
51 code CODE >30:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
51 code CODE >31:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
52 code CODE >32:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
53 code CODE >33:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
53 code CODE >34:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
54 code CODE >35:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
55 code CODE >36:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
55 code CODE >37:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
56 code CODE >38:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
57 code CODE >39:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
58 code CODE >40:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
59 code CODE >41:C:\Users\Juan Pablo\MPLABXProjects\Practica1 interrupcion.X\newAsmTemplate.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 A2 0 ABS 0 - -
__Hspace_1 24 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 4010 0 ABS 0 - -
__Hudata_bank0 A2 0 ABS 0 udata_bank0 -
__Hudata_bank1 A2 0 ABS 0 udata_bank1 -
__Hudata_bank2 A2 0 ABS 0 udata_bank2 -
__Hudata_bank3 A2 0 ABS 0 udata_bank3 -
__LresetVec 0 0 CODE 0 resetVec -
__HresetVec 2 0 CODE 0 resetVec -
__Hedata A2 0 ABS 0 edata -
__Hudata A2 0 ABS 0 udata -
__Hconfig 4012 0 CONFIG 4 config -
__Ledata A2 0 ABS 0 edata -
__Ludata A2 0 ABS 0 udata -
__Hcode A2 0 ABS 0 code -
__Hdata A2 0 ABS 0 data -
__Hmain A2 0 CODE 0 main -
__Lcode A2 0 ABS 0 code -
__Ldata A2 0 ABS 0 data -
__Lmain 40 0 CODE 0 main -
__S0 5A 0 ABS 0 - -
__S1 24 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Ludata_bank0 A2 0 ABS 0 udata_bank0 -
__Ludata_bank1 A2 0 ABS 0 udata_bank1 -
__Ludata_bank2 A2 0 ABS 0 udata_bank2 -
__Ludata_bank3 A2 0 ABS 0 udata_bank3 -
__Hudata_shr A2 0 ABS 0 udata_shr -
__Hisr 22 0 CODE 0 isr -
__Lisr 8 0 CODE 0 isr -
__Ludata_shr A2 0 ABS 0 udata_shr -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
isr 0 4 8 D 2
udata 1 20 20 4 1
resetVec 0 0 0 1 2
main 0 20 40 3A 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
